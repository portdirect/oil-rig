{{- $tenant := .Values.tenant -}}
{{- $cluster := .Values.cluster -}}

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: k8s-apiserver
  labels:
    tenant: {{ $tenant }}
    cluster: {{ $cluster }}
    tier: pump-control-plane
    component: k8s-apiserver
spec:
  replicas: {{ .Values.apiserver.replicas }}
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        tenant: {{ $tenant }}
        cluster: {{ $cluster }}
        tier: pump-control-plane
        component: k8s-apiserver
    spec:
      nodeSelector:
        cp-tenant-{{ $tenant }}: "true"
        cp-cluster-{{ $cluster }}: "true"
      containers:
        - name: kube-apiserver
          image: gcr.io/google_containers/hyperkube-amd64:v1.6.2
          command:
            - /hyperkube
            - apiserver
            - --apiserver-count=3
#            - --advertise-address=$(POD_IP)
            - --v=5
            - --authorization-mode=RBAC,AlwaysAllow
            - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,ResourceQuota,DefaultTolerationSeconds
            - --anonymous-auth=false
            - --insecure-port=80
            - --insecure-bind-address=0.0.0.0
            - --bind-address=0.0.0.0
            - --secure-port=443
            - --allow-privileged=true
            - --etcd-servers=http://k8s-etcd:2379
            - --service-cluster-ip-range={{ .Values.network.service_cidr }}
            - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
            - --service-account-key-file=/etc/kubernetes/pki/keys/pub/sa.pub
            - --client-ca-file=/etc/kubernetes/pki/certs/ca.crt
            - --tls-cert-file=/etc/kubernetes/pki/certs/apiserver.crt
            - --tls-private-key-file=/etc/kubernetes/pki/keys/priv/apiserver.key
            - --requestheader-client-ca-file=/etc/kubernetes/pki/certs/ca.crt
          volumeMounts:
            - name: pki-certs
              mountPath: /etc/kubernetes/pki/certs
            - name: pki-apiserver
              mountPath: /etc/kubernetes/pki/keys/priv
            - name: pki-pub
              mountPath: /etc/kubernetes/pki/keys/pub
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
      volumes:
        - name: pki-certs
          configMap:
            name: k8s-certs
        - name: pki-pub
          configMap:
            name: k8s-keys-public
        - name: pki-apiserver
          secret:
            secretName: k8s-key-apiserver
